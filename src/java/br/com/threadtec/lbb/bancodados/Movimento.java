package br.com.threadtec.lbb.bancodados;
// Generated May 2, 2013 6:37:11 PM by Hibernate Tools 3.2.1.GA


import java.util.Date;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Movimento generated by hbm2java
 */
@Entity
@Table(name="movimento",schema="public")
@NamedQueries({@NamedQuery(name="Movimento.buscar_movimento_id",          query="FROM Movimento WHERE id = :_id"),
               @NamedQuery(name="Movimento.buscar_movimento_data",        query="FROM Movimento WHERE data = :_data"),
               @NamedQuery(name="Movimento.buscar_movimento_todos",       query="FROM Movimento")})
public class Movimento  implements java.io.Serializable {

     public static final String BUSCAR_ID      = "Movimento.buscar_movimento_id";
     public static final String BUSCAR_DATA    = "Movimento.buscar_movimento_data";
     public static final String BUSCAR_TODOS   = "Movimento.buscar_movimento_todos";
     
     @Id
     @GeneratedValue(strategy=GenerationType.SEQUENCE, generator = "movimento_sequence")
     @SequenceGenerator(name="movimento_sequence", sequenceName = "movimento_sequence", allocationSize=1)
     private int id;
     @ManyToOne
     @JoinColumn(name = "id", referencedColumnName = "id", insertable=false, updatable=false) 
     private Usuario usuario;
     @ManyToOne
     @JoinColumn(name = "id", referencedColumnName = "id", insertable=false, updatable=false) 
     private TipoMovimento tipoMovimento;
     @ManyToOne
     @JoinColumn(name = "id", referencedColumnName = "id", insertable=false, updatable=false) 
     private Setor setor;
     @ManyToOne
     @JoinColumn(name = "id", referencedColumnName = "id", insertable=false, updatable=false) 
     private Estoque estoque;
     @Temporal(TemporalType.TIMESTAMP)
     @Column(name="data", nullable=false, length=29)
     private Date data;

    public Movimento() {
    }

    public Movimento(int id, Usuario usuario, TipoMovimento tipoMovimento, Setor setor, Estoque estoque, Date data) {
       this.id = id;
       this.usuario = usuario;
       this.tipoMovimento = tipoMovimento;
       this.setor = setor;
       this.estoque = estoque;
       this.data = data;
    }
   
         public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }
        public Usuario getUsuario() {
        return this.usuario;
    }
    
    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }
    
    public TipoMovimento getTipoMovimento() {
        return this.tipoMovimento;
    }
    
    public void setTipoMovimento(TipoMovimento tipoMovimento) {
        this.tipoMovimento = tipoMovimento;
    }
        public Setor getSetor() {
        return this.setor;
    }
    
    public void setSetor(Setor setor) {
        this.setor = setor;
    }
    public Estoque getEstoque() {
        return this.estoque;
    }
    
    public void setEstoque(Estoque estoque) {
        this.estoque = estoque;
    }
        public Date getData() {
        return this.data;
    }
    
    public void setData(Date data) {
        this.data = data;
    }




}


